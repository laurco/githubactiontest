name: CI Flask App - Max Notify

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      HUB_WEBHOOK_URL: ${{ secrets.HUB_WEBHOOK_URL }}
      REPO: ${{ github.repository }}
      REF: ${{ github.ref }}
    steps:
      - name: Debug HUB_WEBHOOK_URL
        run: |
          echo "HUB_WEBHOOK_URL='$HUB_WEBHOOK_URL'"
          if [ -z "$HUB_WEBHOOK_URL" ]; then
            echo "⚠️ HUB_WEBHOOK_URL is empty! Notifications won't be sent."
          fi

      - name: Notify Workflow Start
        run: |
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"workflow_start\",\"status\":\"started\"}"
          else
            echo "Skipping notification: HUB_WEBHOOK_URL empty"
          fi

      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify Step => Checkout
        run: |
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Checkout\",\"status\":\"success\"}"
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Notify Step => Setup Python
        run: |
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Setup Python\",\"status\":\"success\"}"
          fi

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Notify Step => Install Dependencies
        run: |
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Install Dependencies\",\"status\":\"success\"}"
          fi

      - name: Lint
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Notify Step => Lint
        run: |
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Lint\",\"status\":\"success\"}"
          fi

      - name: Run Tests
        run: pytest test_app.py -v || true
      - name: Notify Step => Run Tests
        run: |
          STATUS=$([[ $? -eq 0 ]] && echo "success" || echo "failure")
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Run Tests\",\"status\":\"$STATUS\"}"
          fi

      - name: Notify Job Result
        run: |
          STATUS="${{ job.status }}"
          if [ -n "$HUB_WEBHOOK_URL" ]; then
            curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
              -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"status\":\"$STATUS\"}"
          fi
