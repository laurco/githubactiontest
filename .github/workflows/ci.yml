name: CI Flask App - Max Notify

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      HUB_WEBHOOK_URL: ${{ secrets.HUB_WEBHOOK_URL }}
      REPO: ${{ github.repository }}
      REF: ${{ github.ref }}
    steps:
      - name: Notify Workflow Start
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"workflow_start\",\"status\":\"started\"}"

      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify Step => Checkout
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Checkout\",\"status\":\"success\"}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Notify Step => Setup Python
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Setup Python\",\"status\":\"success\"}"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Notify Step => Install Dependencies
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Install Dependencies\",\"status\":\"success\"}"

      - name: Lint
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Notify Step => Lint
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Lint\",\"status\":\"success\"}"

      - name: Run Tests
        run: pytest test_app.py -v || true
      - name: Notify Step => Run Tests
        run: |
          STATUS=$([[ $? -eq 0 ]] && echo "success" || echo "failure")
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"step\":\"Run Tests\",\"status\":\"$STATUS\"}"

      - name: Notify Job Result
        run: |
          STATUS="${{ job.status }}"
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"test\",\"status\":\"$STATUS\"}"

  build-linux:
    runs-on: ubuntu-latest
    needs: test
    env:
      HUB_WEBHOOK_URL: ${{ secrets.HUB_WEBHOOK_URL }}
      REPO: ${{ github.repository }}
      REF: ${{ github.ref }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Notify Step => Checkout
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"step\":\"Checkout\",\"status\":\"success\"}"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Notify Step => Setup Python
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"step\":\"Setup Python\",\"status\":\"success\"}"

      - name: Install Dependencies & PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller
      - name: Notify Step => Install Dependencies
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"step\":\"Install Dependencies\",\"status\":\"success\"}"

      - name: Build Linux Binary
        run: pyinstaller --onefile app.py
      - name: Notify Step => Build Linux Binary
        run: |
          STATUS=$([[ $? -eq 0 ]] && echo "success" || echo "failure")
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"step\":\"Build Linux Binary\",\"status\":\"$STATUS\"}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: flask-app-linux
          path: dist/app
          retention-days: 7
      - name: Notify Step => Upload Artifact
        run: |
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"step\":\"Upload Artifact\",\"status\":\"success\"}"

      - name: Notify Job Result
        run: |
          STATUS="${{ job.status }}"
          curl -s -X POST "$HUB_WEBHOOK_URL" -H "Content-Type: application/json" \
          -d "{\"repo\":\"$REPO\",\"ref\":\"$REF\",\"job\":\"build-linux\",\"status\":\"$STATUS\"}"
