name: CI Flask App - Max Notify

on:
  push:
    branches: [ main ]

env:
  HUB_WEBHOOK_URL: ${{ secrets.HUB_WEBHOOK_URL }}
  REPO: ${{ github.repository }}
  REF: ${{ github.ref }}

jobs:
  start-notify:
    runs-on: ubuntu-latest
    outputs:
      start_time: ${{ steps.timestamp.outputs.time }}
    steps:
      - name: Log environment variables
        run: |
          echo "::group::[DEBUG] Environment variables"
          echo "REPO=${{ github.repository }}"
          echo "REF=${{ github.ref }}"
          echo "RUN_ID=${{ github.run_id }}"
          echo "Webhook URL set? ${{ env.HUB_WEBHOOK_URL != '' }}"
          echo "::endgroup::"

      - name: Get start timestamp
        id: timestamp
        run: echo "time=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Notify pipeline start
        if: env.HUB_WEBHOOK_URL != ''
        run: |
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg repo "${{ env.REPO }}" \
              --arg ref "${{ env.REF }}" \
              --arg date "${{ steps.timestamp.outputs.time }}" \
              '{type:"start", repo:$repo, branch:$ref, start_time:$date}')"

  main:
    needs: start-notify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        run: |
          pip install --upgrade pip
        # Notify step start
        env:
          HUB_WEBHOOK_URL: ${{ env.HUB_WEBHOOK_URL }}
        run: |
          STATUS="Started"
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg repo "${{ env.REPO }}" --arg ref "${{ env.REF }}" \
              --arg job "main" --arg step "Setup Python" --arg status_start "$STATUS" \
              '{type:"step_start", repo:$repo, branch:$ref, job:$job, step:$step, status_start:$status_start}')"

      - name: Install deps
        run: |
          pip install -r requirements.txt
        continue-on-error: true
        env:
          HUB_WEBHOOK_URL: ${{ env.HUB_WEBHOOK_URL }}
        run: |
          STATUS=$([[ $? -eq 0 ]] && echo "Successful" || echo "Failed")
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg repo "${{ env.REPO }}" --arg ref "${{ env.REF }}" \
              --arg job "main" --arg step "Install deps" --arg status_end "$STATUS" \
              '{type:"step_end", repo:$repo, branch:$ref, job:$job, step:$step, status_end:$status_end}')"

      - name: Run tests
        continue-on-error: true
        run: |
          pytest test_app.py -v
          STATUS=$([[ $? -eq 0 ]] && echo "Successful" || echo "Failed")
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg repo "${{ env.REPO }}" --arg ref "${{ env.REF }}" \
              --arg job "main" --arg step "Run tests" --arg status_end "$STATUS" \
              '{type:"step_end", repo:$repo, branch:$ref, job:$job, step:$step, status_end:$status_end}')"

      - name: Archive results
        run: zip -r results.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-results
          path: results.zip

  fail-notify:
    if: failure()
    needs: [start-notify, main]
    runs-on: ubuntu-latest
    steps:
      - name: Notify failure
        run: |
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg repo "${{ env.REPO }}" \
              --arg ref "${{ env.REF }}" \
              --arg date "$(date -u '+%Y-%m-%d %H:%M:%S UTC')" \
              --arg step "${{ github.job }}" \
              '{type:"fail", repo:$repo, branch:$ref, failed_step:$step, fail_time:$date}')"

  end-notify:
    if: always()
    needs: [start-notify, main]
    runs-on: ubuntu-latest
    steps:
      - name: Get end timestamp
        id: timestamp
        run: echo "time=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Notify pipeline end
        if: env.HUB_WEBHOOK_URL != ''
        run: |
          ARTIFACT_URL="https://github.com/${{ env.REPO }}/actions/runs/${{ github.run_id }}"
          curl -s -X POST "https://karri-fruity-wrongfully.ngrok-free.dev/webhook" \
            -H "Content-Type: application/json" \
            -d "$(jq -n \
              --arg repo "${{ env.REPO }}" \
              --arg ref "${{ env.REF }}" \
              --arg date "${{ steps.timestamp.outputs.time }}" \
              --arg url "$ARTIFACT_URL" \
              '{type:"end", repo:$repo, branch:$ref, end_time:$date, artifact_url:$url}')"
